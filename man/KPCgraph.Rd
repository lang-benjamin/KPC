% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KPC.R
\name{KPCgraph}
\alias{KPCgraph}
\title{Kernel partial correlation with geometric graphs}
\usage{
KPCgraph(Y, X, Z, k, Knn = 1, trans_inv = FALSE)
}
\arguments{
\item{Y}{a matrix (n by dy)}

\item{X}{a matrix (n by dx)}

\item{Z}{a matrix (n by dz)}

\item{k}{a function \eqn{k(y, y')} of class \code{kernel}. It can be the kernel implemented in \code{kernlab} e.g. \code{rbfdot(sigma = 1)}, \code{vanilladot()}}

\item{Knn}{number of nearest neighbor to use; or "MST"}

\item{trans_inv}{TRUE or FALSE. Is \eqn{k(y, y)} free of \eqn{y}?}
}
\description{
Calculate the kernel partial correlation coefficient (KPC) with directed Knn graph or minimum spanning tree.
}
\details{
The kernel partial correlation squared (KPC) measures the conditional dependency
between \eqn{Y} and \eqn{Z} given \eqn{X}, based on an i.i.d. sample of \eqn{(Y, Z, X)}.
It converges to the population quantity which is between 0 and 1.
A small value indicates low conditional dependency between \eqn{Y} and \eqn{Z} given \eqn{X}, and
a high value indicates stronger conditional dependence.
}
\examples{
library(kernlab)
data("med")
KPCgraph(med$D,med$C,med$U,rbfdot(1/(2*median(dist(med$D))^2)),trans_inv=T)


n = 2000
x = rnorm(n)
z = rnorm(n)
y = x + z + rnorm(n,1,1)
KPCgraph(y,x,z,vanilladot(),Knn=1,trans_inv=F)

n = 1000
set.seed(1)
x = runif(n)
z = runif(n)
y = (x + z) \%\% 1
KPCgraph(y,x,z,rbfdot(5),Knn=1,trans_inv=T)
}
